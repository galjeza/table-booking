generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id             Int               @id @default(autoincrement())
  Name           String?
  LastName       String?
  Email          String            @unique
  PhoneNumber    String            @unique
  Type           UserType          @default(USER)
  PasswordHash   String            @unique
  PasswordSalt   String            @unique
  BookedLocation UserBooked[]
  OwnedLocation  UserOwnLocation[]
}

model Location {
    id Int @id @default(autoincrement())
    Name String?
    Description String?
    Phone String?

    //Atrubites for Address
    Street String?
    Country String?

    /// Same Location can have own multiple Tables
    Tables TableAtLocation[]

    /// Same Location be owned by multiple people
    UserOwned UserOwnLocation[]

    /// Same Location have multiple schedules
    LocationHours LocationHours[]
}

model LocationHours {
  id         Int      @id @default(autoincrement())
  DayInWeek  Int?
  OpenTime   DateTime @default(now())
  CloseTime  DateTime @default(now())
  LocationId Int
  Location   Location @relation(fields: [LocationId], references: [id])
}

model UserBooked {
  id           Int                      @id @default(autoincrement())
  DayInWeek    Int?
  StartTime    DateTime                 @default(now())
  Durration    Int?
  UserId       Int
  TablesBooked BookedTablesAtLocation[]
  User         User                     @relation(fields: [UserId], references: [id])
}

model TableAtLocation {
  id               Int                     @id @default(autoincrement())
  NumberOfSeats    Int
  IsBooked         Boolean                 @default(false)
  LocationId       Int
  BookedAtLocation BookedTablesAtLocation?
  Location         Location                @relation(fields: [LocationId], references: [id])
}

model BookedTablesAtLocation {
  id           Int             @id @default(autoincrement())
  UserBookedId Int
  TableId      Int             @unique
  UserBooked   UserBooked      @relation(fields: [UserBookedId], references: [id])
  Table        TableAtLocation @relation(fields: [TableId], references: [id])
}

model UserOwnLocation {
  id         Int      @id @default(autoincrement())
  Privilage  Type     @default(USER)
  UserId     Int
  LocationId Int
  User       User     @relation(fields: [UserId], references: [id])
  Location   Location @relation(fields: [LocationId], references: [id])
}

enum Type {
    USER
    ADMIN
    OWNER
}
